---
interface Post {
  slug: string;
  data: {
    title: string;
    excerpt?: string;
    date?: string;
    coverImage?: string;
  };
}

const { posts = [] }: { posts?: Post[] } = Astro.props;

// Ordenar por fecha descendente (Ãºltimos primero)
const sortedPosts = [...posts].sort((a, b) => {
  const dateA = new Date(a.data.date || '').getTime();
  const dateB = new Date(b.data.date || '').getTime();
  return dateB - dateA;
});
---

<div class="max-w-5xl mx-auto mt-10 px-4 grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-2">
  {sortedPosts.map((post) => (
    <a
      href={`/posts/${post.slug}`}
      class="group block overflow-hidden rounded-2xl text-center transition-transform duration-200 hover:scale-105"
    >
      {/* Imagen */}
      {post.data.coverImage ? (
        <img
          src={post.data.coverImage}
          alt={post.data.title}
          class="w-full h-48 object-cover rounded-md transition-transform duration-200 group-hover:scale-110"
        />
      ) : (
        <div class="w-full h-48 flex items-center justify-center bg-zinc-100 dark:bg-zinc-800 text-zinc-400">
          Sin imagen
        </div>
      )}

      {/* Contenido */}
      <div class="p-4 space-y-1">
        <h2 class="text-base font-semibold text-black dark:text-white group-hover:text-indigo-500 transition">
          {post.data.title}
        </h2>
        {post.data.excerpt && (
          <p class="text-sm text-zinc-600 dark:text-zinc-400 line-clamp-2 overflow-hidden text-ellipsis">
            {post.data.excerpt}
          </p>
        )}
        {post.data.date && (
          <span class="text-xs text-zinc-500 dark:text-zinc-500 mt-2 block">
            {new Date(post.data.date).toLocaleDateString()}
          </span>
        )}
      </div>
    </a>
  ))}
</div>