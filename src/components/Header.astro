---
import { getLangFromUrl, useTranslations } from '../lib/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { title = t('hero.title'), subtitle = t('hero.subtitle') } = Astro.props;
---

<header
  class="relative w-full h-[60vh] min-h-[500px] flex items-center justify-center text-center overflow-hidden border-b border-zinc-200 dark:border-zinc-800 pt-14"
>
  <!-- Animated Tech Background -->
  <div
    class="absolute inset-0 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 dark:from-zinc-900 dark:via-slate-900 dark:to-black"
  >
    <!-- Grid Pattern -->
    <div class="absolute inset-0 opacity-20 dark:opacity-10">
      <svg class="w-full h-full" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse">
            <path
              d="M 40 0 L 0 0 0 40"
              fill="none"
              stroke="currentColor"
              stroke-width="1"
              class="text-slate-400"></path>
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#grid)"></rect>
      </svg>
    </div>

    <!-- Floating Code Elements -->
    <div class="absolute inset-0 overflow-hidden">
      <div
        class="absolute top-20 left-10 opacity-30 dark:opacity-20 text-blue-500 text-xs font-mono transform rotate-12 animate-pulse"
      >
        const build = () => 'products'
      </div>
      <div
        class="absolute top-32 right-20 opacity-25 dark:opacity-15 text-purple-500 text-xs font-mono transform -rotate-6 animate-pulse"
        style="animation-delay: 1s;"
      >
        &lt;Component /&gt;
      </div>
      <div
        class="absolute bottom-40 left-20 opacity-20 dark:opacity-10 text-green-500 text-xs font-mono transform rotate-6 animate-pulse"
        style="animation-delay: 2s;"
      >
        npm run deploy
      </div>
      <div
        class="absolute bottom-20 right-10 opacity-25 dark:opacity-15 text-orange-500 text-xs font-mono transform -rotate-12 animate-pulse"
        style="animation-delay: 0.5s;"
      >
        git commit -m 'ship it'
      </div>
      <div
        class="absolute top-1/2 left-5 opacity-20 dark:opacity-10 text-cyan-500 text-xs font-mono transform rotate-3 animate-pulse"
        style="animation-delay: 1.5s;"
      >
        useEffect(() => {})
      </div>
      <div
        class="absolute top-3/4 right-5 opacity-25 dark:opacity-15 text-pink-500 text-xs font-mono transform -rotate-3 animate-pulse"
        style="animation-delay: 2.5s;"
      >
        async/await
      </div>
    </div>

    <!-- Geometric Shapes -->
    <div class="absolute inset-0">
      <!-- Animated Circles -->
      <div
        class="absolute top-1/4 left-1/4 w-32 h-32 border-2 border-blue-200 dark:border-blue-800 rounded-full opacity-30 animate-spin"
        style="animation-duration: 20s;"
      >
      </div>
      <div
        class="absolute bottom-1/4 right-1/4 w-24 h-24 border-2 border-purple-200 dark:border-purple-800 rounded-full opacity-20 animate-spin"
        style="animation-duration: 15s; animation-direction: reverse;"
      >
      </div>
      <div
        class="absolute top-1/2 right-1/5 w-16 h-16 border border-green-200 dark:border-green-800 rounded-lg opacity-25 animate-bounce"
        style="animation-duration: 4s;"
      >
      </div>

      <!-- Tech Icons as CSS -->
      <div class="absolute top-1/3 right-1/3 w-8 h-8 opacity-20 dark:opacity-10 animate-float">
        <div
          class="w-full h-full bg-gradient-to-br from-blue-400 to-cyan-400 rounded transform rotate-45"
        >
        </div>
      </div>
      <div
        class="absolute bottom-1/3 left-1/3 w-6 h-6 opacity-25 dark:opacity-15 animate-float"
        style="animation-delay: 1s;"
      >
        <div class="w-full h-full bg-gradient-to-br from-green-400 to-emerald-400 rounded-full">
        </div>
      </div>
      <div
        class="absolute top-1/5 left-1/2 w-5 h-5 opacity-30 dark:opacity-20 animate-float"
        style="animation-delay: 2s;"
      >
        <div class="w-full h-full bg-gradient-to-br from-purple-400 to-pink-400 rounded"></div>
      </div>
    </div>

    <!-- Binary Rain Effect -->
    <div class="absolute inset-0 opacity-5 dark:opacity-3 overflow-hidden">
      <div
        class="absolute text-xs font-mono text-green-500 animate-pulse"
        style="top: 10%; left: 5%; animation-delay: 0s;"
      >
        01001000 01100001 01100011 01101011
      </div>
      <div
        class="absolute text-xs font-mono text-blue-500 animate-pulse"
        style="top: 30%; left: 85%; animation-delay: 1s;"
      >
        01001100 01100001 01100010
      </div>
      <div
        class="absolute text-xs font-mono text-purple-500 animate-pulse"
        style="top: 70%; left: 15%; animation-delay: 2s;"
      >
        01000100 01100101 01110110
      </div>
    </div>

    <!-- Connection Lines -->
    <svg
      class="absolute inset-0 w-full h-full opacity-10 dark:opacity-5"
      xmlns="http://www.w3.org/2000/svg"
    >
      <line
        x1="20%"
        y1="20%"
        x2="80%"
        y2="30%"
        stroke="currentColor"
        stroke-width="1"
        class="text-blue-400"
      >
        <animate
          attributeName="stroke-dasharray"
          values="0,100;50,50;100,0;0,100"
          dur="8s"
          repeatCount="indefinite"></animate>
      </line>
      <line
        x1="10%"
        y1="60%"
        x2="70%"
        y2="80%"
        stroke="currentColor"
        stroke-width="1"
        class="text-purple-400"
      >
        <animate
          attributeName="stroke-dasharray"
          values="0,100;50,50;100,0;0,100"
          dur="10s"
          repeatCount="indefinite"></animate>
      </line>
      <line
        x1="60%"
        y1="15%"
        x2="90%"
        y2="70%"
        stroke="currentColor"
        stroke-width="1"
        class="text-green-400"
      >
        <animate
          attributeName="stroke-dasharray"
          values="0,100;50,50;100,0;0,100"
          dur="12s"
          repeatCount="indefinite"></animate>
      </line>
    </svg>
  </div>

  <!-- Content -->
  <div class="relative z-10 px-4 max-w-5xl mx-auto">
    <div class="rounded-3xl p-8 md:p-12">
      <!-- Status Badge -->
      <div
        class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 text-blue-800 dark:text-blue-200 mb-6 border border-blue-200 dark:border-blue-800"
      >
        <div class="w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></div>
        {t('hero.badge')}
      </div>

      <!-- Main Title -->
      <h1
        class="text-4xl sm:text-5xl lg:text-7xl font-bold bg-gradient-to-r from-slate-900 via-blue-900 to-purple-900 dark:from-white dark:via-blue-200 dark:to-purple-200 bg-clip-text text-transparent mb-6 leading-tight"
      >
        {title}
      </h1>

      <!-- Subtitle -->
      <p
        class="text-lg sm:text-xl lg:text-2xl text-slate-600 dark:text-slate-300 mb-8 max-w-3xl mx-auto leading-relaxed"
      >
        {subtitle}
      </p>

      <!-- Action Hint -->
      <div class="text-sm text-slate-500 dark:text-slate-400 animate-pulse">
        {t('hero.scroll')}
      </div>
    </div>
  </div>
</header>

<style>
  @keyframes float {
    0%,
    100% {
      transform: translateY(0px) rotate(0deg);
    }
    25% {
      transform: translateY(-5px) rotate(1deg);
    }
    50% {
      transform: translateY(-10px) rotate(0deg);
    }
    75% {
      transform: translateY(-5px) rotate(-1deg);
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes glow {
    0%,
    100% {
      box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);
    }
    50% {
      box-shadow: 0 0 20px rgba(59, 130, 246, 0.8);
    }
  }
</style>
