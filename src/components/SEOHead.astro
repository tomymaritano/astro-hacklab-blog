---
import type { SEOData } from '@/types';

interface Props extends SEOData {
  canonical?: string;
}

const { 
  title, 
  description, 
  canonical, 
  openGraph, 
  twitter 
} = Astro.props;

const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site).toString();
const ogImage = openGraph?.image || '/images/og-default.jpg';
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta charset="UTF-8" />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={openGraph?.type || 'website'} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={openGraph?.title || title} />
<meta property="og:description" content={openGraph?.description || description} />
<meta property="og:image" content={new URL(ogImage, Astro.site).toString()} />

<!-- Twitter -->
<meta property="twitter:card" content={twitter?.card || 'summary_large_image'} />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={twitter?.title || title} />
<meta property="twitter:description" content={twitter?.description || description} />
<meta property="twitter:image" content={new URL(twitter?.image || ogImage, Astro.site).toString()} />

<!-- Additional SEO -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1" />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": title,
  "description": description,
  "url": canonicalURL,
  "image": new URL(ogImage, Astro.site).toString(),
  "author": {
    "@type": "Person",
    "name": "HackLab Developer"
  }
}
</script>