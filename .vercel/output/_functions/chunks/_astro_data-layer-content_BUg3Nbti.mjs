const _astro_dataLayerContent = [["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.10.0","content-config-digest","b7712c5237539d2e","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","posts",["Map",11,12,23,24,34,35,45,46,83,84],"blacro-studio",{id:11,data:13,body:18,filePath:19,digest:20,legacyId:21,deferredRender:22},{title:14,date:15,excerpt:16,coverImage:17},"How I Built the Blacro Studio Website with Next.js, Tailwind CSS & Framer Motion","2025-06-24","Here‚Äôs the process of creating a minimalist, animated site for Blacro Studio ‚Äî a creative agency ‚Äî using Next.js, Tailwind CSS, and Framer Motion.","/images/blacro-studio.jpg","When the team at **Blacro Studio** reached out, I knew this was going to be more than just another website. They had a strong creative identity already ‚Äî my job was to translate that into a smooth, high-performance web experience.\n\nHere‚Äôs my process, the tools I chose, and what I learned along the way.\n\n---\n\n![Design assets from the client](/images/blacro-studio.jpg)\n\n## How I Built It ‚Äî Step by Step\n\nHere‚Äôs the **exact process** I followed to build this site:\n\n### 1. Set up the environment\n\nFirst, I scaffolded the app with **Next.js** and installed Tailwind CSS:\n\n```bash\nnpx create-next-app@latest blacro-website\ncd blacro-website\nnpm install tailwindcss framer-motion\nnpx tailwindcss init -p\n```\n\nAnd then I configured `tailwind.config.js` and added my global styles.\n\n### 2. Designed components to fit the brand\n\nBlacro Studio had its branding and assets ready.  \nI split the UI into small pieces:\n- `Header.jsx` ‚Äî bold title section\n- `AboutSection.jsx` ‚Äî company story with animated text\n- `ProjectCardCarousel.jsx` ‚Äî marquee-style project carousel\n- `ContactForm.jsx` ‚Äî responsive contact form\n- `Footer.jsx` ‚Äî minimal footer with links\n\nEach component was built using utility-first Tailwind classes to keep everything easy to customize.\n\n### 3. Added smooth animations with Framer Motion\n\nTo add life to the UI:\n- Wrapped key sections with `motion.div` for fade-ins on scroll.\n- Added scale and opacity animations to links and images on hover.\n- Built an infinite marquee for the project carousel.\n\n### 4. Images and responsiveness\n\nWith `next/image`:\n- Defined `sizes` and `fill` for responsive images.\n- Kept the layout stable across all devices.\n- Compressed images for faster load times without losing quality.\n\n### 5. Backend & contact form\n\nCreated a simple `POST /api/contact` endpoint:\n- Validated inputs with **Zod**.\n- Sent emails with **Nodemailer**.\n- Added basic feedback messages for successful and failed submissions.\n\n---\n\n## Why this setup works\n\nThis project matches my dev style ‚Äî minimal boilerplate, high performance, and tailored to the client‚Äôs brand:\n\n- ‚ö° **Full control** ‚Äî No generic templates.\n- üé® **Custom design** ‚Äî Every detail matches the brand.\n- üöÄ **Performance-first** ‚Äî Lazy-loading, optimization, and no bloat.\n\n---\n\n## Tech Stack\n\nHere‚Äôs what powered the build:\n\n- **Next.js** ‚Äî SSR, routing, image optimization.\n- **Tailwind CSS** ‚Äî Rapid utility-first styles.\n- **Framer Motion** ‚Äî Smooth animations with minimal setup.\n- **Nodemailer** ‚Äî Reliable email delivery.\n\n---\n\n## What I Learned\n\n- Aligning design and development is easier with early communication.\n- Balancing visual flair with performance is key.\n- Break the UI into small, reusable components to scale efficiently.\n\n#### That‚Äôs my process ‚Äî if you‚Äôd like the source code or help creating your own branded site, reach out! ‚úåÔ∏è","src/content/posts/blacro-studio.mdx","89666ba48082785d","blacro-studio.mdx",true,"claude",{id:23,data:25,body:30,filePath:31,digest:32,legacyId:33,deferredRender:22},{title:26,date:27,excerpt:28,coverImage:29},"How AI Helped Me Validate a Business Idea in One Week","2025-06-26","From vague automation idea to complete business plan. All without writing a single line of code.","/images/claude.jpg","**One week ago**: I had a crazy idea about automating a traditional industry using AI and WhatsApp.\n\n**Today**: I have a complete business plan, legal analysis, financial projections, technical stack, and a clear implementation roadmap.\n\n**Lines of code written**: Zero.\n\nThis is what AI can do for your ideas.\n\n---\n\n## The Process: From Idea to Execution Plan\n\n### Claude as a Virtual Co-Founder\n\nIn just 4 intense sessions, I turned a vague idea into an actionable business plan:\n\nimport ProcessDropdown from '../../components/ProcessDropdown'\n\n<ProcessDropdown \n  client:visible\n  steps={[\n    {\n      id: 'validation',\n      title: 'Market Validation',\n      subtitle: 'Confirming a real opportunity exists',\n      details: [\n        'Deep research on the target industry and key players',\n        'Mapping direct and indirect competitors with SWOT analysis',\n        'Identifying specific pain points and frequency of occurrence',\n        'Estimating market size (TAM, SAM, SOM) with reliable sources',\n        'Defining buyer personas and typical customer journey'\n      ],\n      outcome: 'Confirmed viable market opportunity worth $X million with fragmented competition'\n    },\n    {\n      id: 'architecture',\n      title: 'Technical Architecture',\n      subtitle: 'Designing the solution from scratch',\n      details: [\n        'Choosing a tech stack balancing cost, scalability, and time-to-market',\n        'Designing microservices architecture with API-first approach',\n        'Detailed cost estimation for infrastructure (dev, staging, production)',\n        'Development roadmap split into 2-4 week MVP iterations',\n        'Defining key technical metrics and KPIs for monitoring'\n      ],\n      outcome: 'Complete architecture with projected costs and a 6-month roadmap to MVP'\n    },\n    {\n      id: 'legal',\n      title: 'Legal and Regulatory Framework',\n      subtitle: 'Navigating legal complexity',\n      details: [\n        'Thorough analysis of the regulatory framework in the target sector',\n        'Identifying required licenses, permits, and certifications',\n        'Assessing civil and criminal liabilities tied to the business',\n        'Recommending optimal legal structure (LLC, Corp, etc.)',\n        'Mapping necessary insurance types and minimum coverage'\n      ],\n      outcome: 'Clear legal roadmap with all regulatory steps identified'\n    },\n    {\n      id: 'financial',\n      title: 'Financial Modeling',\n      subtitle: 'Projecting economic viability',\n      details: [\n        'Building a financial model with 4 scenarios (pessimistic, realistic, optimistic, moonshot)',\n        'Revenue projections based on pricing strategy and adoption rate',\n        'Analysis of fixed and variable costs with 5-year forecast',\n        'Key metrics calculated: LTV, CAC, payback period, burn rate',\n        'Modeling funding rounds and equity dilution'\n      ],\n      outcome: 'Robust financial model with projected ROI over 1000% in 5 years'\n    }\n  ]}\n/>\n\n**Final output**: 18,000 words of professional-grade documentation, ready to pitch to investors.\n\n---\n\n## What Blew My Mind\n\n### Before vs. After\n\nimport ComparisonChart from '../../components/ComparisonChart'\n\n<ComparisonChart \n  client:visible\n  data={[\n    { method: 'Consulting Firm', time: 120, cost: 15000, research: 30, docs: 200 },\n    { method: 'Solo/Manual', time: 90, cost: 2000, research: 60, docs: 50 },\n    { method: 'With AI', time: 7, cost: 20, research: 5, docs: 150 }\n  ]}\n  title=\"Business Idea Validation: Method Comparison\"\n  subtitle=\"Time (days), Cost (USD), Research (hours), Documents (pages)\"\n/>\n\n**The democratization of entrepreneurship is here.**\n\n---\n\n## My Key Tools\n\n### Claude Code ‚Äì The Game Changer\n\nI haven‚Äôt used it for this project yet, but Claude Code is reshaping development:\n\n<iframe \n  width=\"100%\" \n  height=\"400\" \n  src=\"https://www.youtube.com/embed/AJpK3YTTKZ4\" \n  title=\"Claude Code Demo\"\n  frameBorder=\"0\" \n  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n  allowFullScreen\n></iframe>\n\n*Claude Code in action: complete app dev from the terminal*\n\n**What fascinates me**: You write your idea in plain English and Claude Code generates:\n- Complete applications\n- Built-in tests\n- Best practices by default\n- Clean documentation\n\nIt's like having a senior dev that never sleeps.\n\n---\n\n### My Current Validation Stack\n\n| Tool | Usage |\n|------|-------|\n| üéØ **Claude.ai** | Main strategist |\n| üíª **Claude Code** | Future development |\n| üîç **ChatGPT** | Research & validation |\n| ‚ö° **Cursor** | Smart coding |\n\n---\n\n## Why I Haven‚Äôt Coded Anything Yet\n\n**Plot twist**: Proper planning saves months of pivoting.\n\nClaude showed me that before writing code I need:\n1. ‚úÖ Proper legal structure (for protection)\n2. ‚úÖ Required sector permits  \n3. ‚úÖ Civil liability insurance\n4. ‚úÖ Pilot customer validation\n\n**Code is easy. Business is complex.**\n\n---\n\n## My 2025 Prediction\n\n> **Entrepreneurs using AI will replace those who don‚Äôt.**\n\nIt‚Äôs like doing research in a library vs. using Google. Both work‚Äîbut one gives you a massive competitive edge.\n\n > üí° **Quick Tip**  \n> The barrier to entrepreneurship just disappeared. If you have an idea, validate it with AI before someone else does.\n\n---\n\n## Your Turn: Validate Your Idea in 4 Steps\n\n   *Claude.ai is free to get started*\n\n1. **Describe your idea**  \n   *As if you're telling a friend*\n\n2. **Ask for a full analysis**  \n   *Market, tech, legal, financial*\n\n3. **Iterate until it's clear**  \n   *Double down where needed*\n\n---\n\n## What‚Äôs Next\n\nI‚Äôll be documenting the full journey:\n- Legal & regulatory setup ‚è≥\n- First builds with Claude Code ‚è≥  \n- Pilot customer feedback ‚è≥\n- Real-world results & metrics ‚è≥\n\n**Want to follow the journey?** [Connect with me on LinkedIn](https://linkedin.com/in/tuprofile) for real-time updates.\n\n---","src/content/posts/claude.mdx","a689747483514901","claude.mdx","link-bio",{id:34,data:36,body:41,filePath:42,digest:43,legacyId:44,deferredRender:22},{title:37,date:38,excerpt:39,coverImage:40},"How I Built My Link-in-Bio with Vite, React & Framer Motion","2025-06-02","Here‚Äôs the process of creating my animated link-in-bio using Vite, React, Tailwind CSS, and Framer Motion.","/images/vite.png","I wanted a **minimal, animated link-in-bio** that I could easily host and update myself ‚Äî without relying on third-party services.\n\nHere‚Äôs my process, tools, and what I learned along the way.\n\n---\n\n\n![My workspace on the go](/bio.jpg)\n\n## How I Built It ‚Äî Step by Step\n\nHere‚Äôs the **exact process** I followed to build this link-in-bio page:\n\n### 1.  Installed the environment\nFirst, I set up a new Vite + React project:\n```bash\nnpm create vite@latest link-in-bio -- --template react\ncd link-in-bio\n```\n\nThen added my main dependencies:\n\n```bash \nnpm install tailwindcss postcss autoprefixer framer-motion\nnpx tailwindcss init -p\n```\n\nAnd configured Tailwind in tailwind.config.js + index.css.\n\n### 2. Created the core components\n\nNext, I broke the UI into small pieces:\n- ProfileImage.jsx ‚Äî top image + profile info.\n- LinkButton.jsx ‚Äî each animated link.\n- SocialLinks.jsx ‚Äî optional social icon row.\n\nEach component was styled with Tailwind utility classes.\n\n### 3. Integrated animations with Framer Motion\n\nI used Framer Motion for smooth interactions:\n\t‚Ä¢\tAdded motion.a to each link so they scale on hover.\n\t‚Ä¢\tWrapped the entire layout in a motion.div to add a fade-in on page load.\n\n### 4. Added a Dark Mode Toggle\n\nI created a simple ToggleDarkMode.jsx:\n- Uses a state hook (useState) to switch between dark and light.\n- Toggles a class on html or body so Tailwind‚Äôs dark: variants kick in.\n- Wrapped the entire app in a parent div that smoothly transitions its background color using a Tailwind class like transition-colors duration-500.\n\nWrapped everything for a subtle effect\n\n###  Finally, I wrapped the main layout in a motion.div so that:\n- On page mount, opacity animates in.\n- On theme toggle, a scale or opacity change adds a gentle transition.\n\nThis subtle polish made the app feel more dynamic and fun to use.\n\n---\n\n## Why I Built It Myself\n\nMost link-in-bio tools look the same and charge a subscription.  \nI decided to build my own because:\n\n- Ô∏è **Full control** ‚Äî Content, style, hosting, data.\n-  **Performance** ‚Äî Minimal footprint and blazing fast.\n-  **Custom animations** ‚Äî A unique style that matches my personal brand.\n\n---\n\n## Tech Stack\n\nHere‚Äôs what I chose for the project:\n\n- **Vite** ‚Äî Instant setup and super fast HMR.\n- Ô∏è**React** ‚Äî Familiar component structure.\n- **Tailwind CSS** ‚Äî Rapid, utility-first styles.\n- **Framer Motion** ‚Äî Smooth page and hover animations.\n\n\n---\n\n## What I Learned\n-  Vite + Tailwind is a super productive combo ‚Äî zero setup pain.\n-  Framer Motion makes it effortless to add smooth, delightful animations.\n-  Self-hosting is the way to go ‚Äî full control and no recurring fees.\n\n#### That‚Äôs my process ‚Äî if you want the source code or need help setting up your own link-in-bio page, let me know! üöÄ","src/content/posts/link-bio.mdx","f96eb96300ce9198","link-bio.mdx","history",{id:45,data:47,body:52,filePath:53,digest:54,rendered:55,legacyId:82},{title:48,date:49,excerpt:50,coverImage:51},"My Journey: From Coding at Home to Creating on My Own Terms","2025-04-01","I‚Äôm Tomy, a developer and product engineer who has made flexibility, minimalism, and thoughtful work my way of life.","/images/myjourney.jpg","## How It All Started\n\nMy story with technology began when I was a kid, sitting in front of my first computer and realizing that I could do much more than just consume content ‚Äî I could **create**.\n\nI started by tinkering with software, seeing what made it tick, and writing my first lines of code. Back then, I didn‚Äôt see it as a career ‚Äî I was just curious and loved the feeling of making something real. That‚Äôs when I discovered that programming is a powerful tool for turning ideas into reality.\n\n## The Pursuit of Freedom\n\nWhen I started working on my own projects and with companies, I quickly realized I wanted more than a fixed schedule and a traditional office. To me, freedom means having control over my time, my environment, and the way I work.\n\nThat mindset led me to choose projects and collaborations that allow me to focus, be productive, and do my best work ‚Äî whether that‚Äôs in my home office, a caf√©, or anywhere that keeps me inspired. My laptop is my studio and my toolbox, and I‚Äôve learned to adapt to different setups without losing sight of quality.\n\n![My workspace on the go](https://images.unsplash.com/photo-1523726491678-bf852e717f6a?q=80&w=1740&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\n\n## The Influence of Minimalism and Japanese Aesthetics\n\nIn my work as a programmer and designer, I draw a lot of inspiration from Japanese aesthetics and their appreciation for well-thought-out details. I aim for everything to be simple, purposeful, and functional. To me, beauty lies in making something as straightforward as it can be ‚Äî nothing less, nothing more.\n\nApplying this concept to my projects allows me to focus on solving real problems, removing distractions, and putting the user experience above all else. Every product I build is a mix of creativity and technology, pragmatism and design.\n\n## My Work and My Purpose\n\nToday I work as a **Product Engineer**, and my role is a combination of coding, researching, iterating, testing ‚Äî and most importantly ‚Äî listening. I enjoy being part of teams that value quality, clear communication, and the pursuit of the best version of what we do.\n\nWhether I‚Äôm building a web app from scratch, contributing to a UX overhaul, or shipping new features that improve a product, I always keep one question in mind:  \n> How do we make this better for the people who use it?\n\nWhen I work with clients or startups, my goal is for things to be **clear and well-crafted**. I want every delivery to be solid, easy to understand, and to truly solve problems ‚Äî not just add more code.\n\n## What I‚Äôve Learned Along the Way\n\n- **Quality beats quantity.** A well-thought-out product is far more powerful than ten rushed ones.\n- **Listening is key.** Before writing code or designing, you need to understand what people are trying to achieve.\n- **Simplicity is hard to achieve ‚Äî but it‚Äôs worth it.** Removing the unnecessary is the most difficult part of the process.\n- **Adaptability is part of the game.** Staying flexible in different environments keeps me sharp and responsive.\n- **Never stop learning.** Tech changes every day ‚Äî and that‚Äôs the best part.\n\n## What‚Äôs Next\n\nI‚Äôm still learning, exploring new languages, new projects, and new places that inspire me. What never changes is my drive to build things that matter ‚Äî things that are beautiful, useful, and built to last.\n\nIf you‚Äôve read this far, thank you for joining me. I hope my story encourages you to live and work in your own way ‚Äî and to create with purpose.\n\n![My workspace on the go](https://images.unsplash.com/photo-1690228254548-31ef53e40cd1?q=80&w=1142&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\n\n**‚Äî Tomy**","src/content/posts/history.md","b6fb9d975702bdee",{html:56,metadata:57},"<h2 id=\"how-it-all-started\">How It All Started</h2>\n<p>My story with technology began when I was a kid, sitting in front of my first computer and realizing that I could do much more than just consume content ‚Äî I could <strong>create</strong>.</p>\n<p>I started by tinkering with software, seeing what made it tick, and writing my first lines of code. Back then, I didn‚Äôt see it as a career ‚Äî I was just curious and loved the feeling of making something real. That‚Äôs when I discovered that programming is a powerful tool for turning ideas into reality.</p>\n<h2 id=\"the-pursuit-of-freedom\">The Pursuit of Freedom</h2>\n<p>When I started working on my own projects and with companies, I quickly realized I wanted more than a fixed schedule and a traditional office. To me, freedom means having control over my time, my environment, and the way I work.</p>\n<p>That mindset led me to choose projects and collaborations that allow me to focus, be productive, and do my best work ‚Äî whether that‚Äôs in my home office, a caf√©, or anywhere that keeps me inspired. My laptop is my studio and my toolbox, and I‚Äôve learned to adapt to different setups without losing sight of quality.</p>\n<p><img src=\"https://images.unsplash.com/photo-1523726491678-bf852e717f6a?q=80&#x26;w=1740&#x26;auto=format&#x26;fit=crop&#x26;ixlib=rb-4.1.0&#x26;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" alt=\"My workspace on the go\"></p>\n<h2 id=\"the-influence-of-minimalism-and-japanese-aesthetics\">The Influence of Minimalism and Japanese Aesthetics</h2>\n<p>In my work as a programmer and designer, I draw a lot of inspiration from Japanese aesthetics and their appreciation for well-thought-out details. I aim for everything to be simple, purposeful, and functional. To me, beauty lies in making something as straightforward as it can be ‚Äî nothing less, nothing more.</p>\n<p>Applying this concept to my projects allows me to focus on solving real problems, removing distractions, and putting the user experience above all else. Every product I build is a mix of creativity and technology, pragmatism and design.</p>\n<h2 id=\"my-work-and-my-purpose\">My Work and My Purpose</h2>\n<p>Today I work as a <strong>Product Engineer</strong>, and my role is a combination of coding, researching, iterating, testing ‚Äî and most importantly ‚Äî listening. I enjoy being part of teams that value quality, clear communication, and the pursuit of the best version of what we do.</p>\n<p>Whether I‚Äôm building a web app from scratch, contributing to a UX overhaul, or shipping new features that improve a product, I always keep one question in mind:</p>\n<blockquote>\n<p>How do we make this better for the people who use it?</p>\n</blockquote>\n<p>When I work with clients or startups, my goal is for things to be <strong>clear and well-crafted</strong>. I want every delivery to be solid, easy to understand, and to truly solve problems ‚Äî not just add more code.</p>\n<h2 id=\"what-ive-learned-along-the-way\">What I‚Äôve Learned Along the Way</h2>\n<ul>\n<li><strong>Quality beats quantity.</strong> A well-thought-out product is far more powerful than ten rushed ones.</li>\n<li><strong>Listening is key.</strong> Before writing code or designing, you need to understand what people are trying to achieve.</li>\n<li><strong>Simplicity is hard to achieve ‚Äî but it‚Äôs worth it.</strong> Removing the unnecessary is the most difficult part of the process.</li>\n<li><strong>Adaptability is part of the game.</strong> Staying flexible in different environments keeps me sharp and responsive.</li>\n<li><strong>Never stop learning.</strong> Tech changes every day ‚Äî and that‚Äôs the best part.</li>\n</ul>\n<h2 id=\"whats-next\">What‚Äôs Next</h2>\n<p>I‚Äôm still learning, exploring new languages, new projects, and new places that inspire me. What never changes is my drive to build things that matter ‚Äî things that are beautiful, useful, and built to last.</p>\n<p>If you‚Äôve read this far, thank you for joining me. I hope my story encourages you to live and work in your own way ‚Äî and to create with purpose.</p>\n<p><img src=\"https://images.unsplash.com/photo-1690228254548-31ef53e40cd1?q=80&#x26;w=1142&#x26;auto=format&#x26;fit=crop&#x26;ixlib=rb-4.1.0&#x26;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" alt=\"My workspace on the go\"></p>\n<p><strong>‚Äî Tomy</strong></p>",{headings:58,localImagePaths:78,remoteImagePaths:79,frontmatter:80,imagePaths:81},[59,63,66,69,72,75],{depth:60,slug:61,text:62},2,"how-it-all-started","How It All Started",{depth:60,slug:64,text:65},"the-pursuit-of-freedom","The Pursuit of Freedom",{depth:60,slug:67,text:68},"the-influence-of-minimalism-and-japanese-aesthetics","The Influence of Minimalism and Japanese Aesthetics",{depth:60,slug:70,text:71},"my-work-and-my-purpose","My Work and My Purpose",{depth:60,slug:73,text:74},"what-ive-learned-along-the-way","What I‚Äôve Learned Along the Way",{depth:60,slug:76,text:77},"whats-next","What‚Äôs Next",[],[],{title:48,date:49,excerpt:50,coverImage:51},[],"history.md","astro-blog",{id:83,data:85,body:89,filePath:90,digest:91,rendered:92,legacyId:122},{title:86,date:38,excerpt:87,coverImage:88},"How I Built My Blog with Astro: My Step-by-Step Process","Here‚Äôs the full story of how I rebuilt my blog with Astro ‚Äî including all the tools, NPM packages, and lessons learned along the way.","/images/astro.jpg","I recently rebuilt my personal blog using **[Astro](https://astro.build)**, and I want to share the whole process ‚Äî from the first `npx create astro@latest` to the NPM packages and components that make it work.\n\nIf you‚Äôre looking to do something similar, I hope this guide gives you a clear roadmap. ‚ö°\n\n---\n\n## Getting Started\n\nWhen I decided to redo my blog, my goals were clear:\n\n-  **Fast and lightweight**\n-  **Focus on writing content**\n-  **No complicated CMS ‚Äî just Markdown files**\n-  **Easy to host, scale, and maintain**\n\nThat‚Äôs why I picked **Astro** ‚Äî it‚Äôs perfect for this kind of project.\n\n---\n\n## Initial Setup\n\nHere‚Äôs what I ran to get going:\n\n```bash\n# Create a new Astro project\nnpx create astro@latest my-blog\ncd my-blog\n\n# Add Tailwind CSS for quick styling\nnpx astro add tailwind\n```\n\nWhy Tailwind?\nNo custom CSS boilerplate, just utility classes and I can focus on layout without writing repetitive CSS.\n\n## NPM Packages I Installed\n\n``` bash\nastro ‚Äî Core framework.\n@astrojs/tailwind ‚Äî Easy utility-first styles.\n@astrojs/mdx ‚Äî Support for writing posts and components in MDX.\n@astrojs/rss ‚Äî RSS feed generation for my blog.\ndate-fns ‚Äî Formatting dates in posts.\nrecharts ‚Äî Interactive graphs.\nastrojs/image ‚Äî Optimized image handling`\n\nnpm install @astrojs/mdx @astrojs/rss date-fns recharts\n```\n## ‚úçÔ∏è Writing Content\nAstro makes content super easy. I just drop .md or .mdx files into src/content/posts.\nEach file looks like this:\n\n```bash\n---\ntitle: \"My First Blog Post\"\ndate: \"2025-06-02\"\nexcerpt: \"A quick look at my process.\"\ncoverImage: \"/images/my-post.jpg\"\n---\n\nYour markdown content goes here.\n\n```\n\n## Styling\n\nWith Tailwind set up, customizing the UI was painless.\nHere‚Äôs my typical style process:\n- Define layout in components (Header.astro, Footer.astro)\n- Use Tailwind utility classes directly (class=\"text-center text-xl mt-8\")\n- Keep a globals.css for any global tweaks.\n\n##  What I Learned\n\n- Astro‚Äôs island architecture really pays off ‚Äî my blog loads instantly and doesn‚Äôt ship any JS I don‚Äôt need.\n- Setting up Tailwind saved me hours of writing custom CSS.\n- NPM packages like date-fns and @astrojs/rss make small tasks like formatting dates and generating feeds super easy.\n- Interactive components fit right into MDX without any friction.\n\n### That‚Äôs my process. - Thanks for reading!","src/content/posts/astro-blog.md","20d7e9408508cc2f",{html:93,metadata:94},"<p>I recently rebuilt my personal blog using <strong><a href=\"https://astro.build\">Astro</a></strong>, and I want to share the whole process ‚Äî from the first <code>npx create astro@latest</code> to the NPM packages and components that make it work.</p>\n<p>If you‚Äôre looking to do something similar, I hope this guide gives you a clear roadmap. ‚ö°</p>\n<hr>\n<h2 id=\"getting-started\">Getting Started</h2>\n<p>When I decided to redo my blog, my goals were clear:</p>\n<ul>\n<li><strong>Fast and lightweight</strong></li>\n<li><strong>Focus on writing content</strong></li>\n<li><strong>No complicated CMS ‚Äî just Markdown files</strong></li>\n<li><strong>Easy to host, scale, and maintain</strong></li>\n</ul>\n<p>That‚Äôs why I picked <strong>Astro</strong> ‚Äî it‚Äôs perfect for this kind of project.</p>\n<hr>\n<h2 id=\"initial-setup\">Initial Setup</h2>\n<p>Here‚Äôs what I ran to get going:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#6A737D\"># Create a new Astro project</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">npx</span><span style=\"color:#9ECBFF\"> create</span><span style=\"color:#9ECBFF\"> astro@latest</span><span style=\"color:#9ECBFF\"> my-blog</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">cd</span><span style=\"color:#9ECBFF\"> my-blog</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Add Tailwind CSS for quick styling</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">npx</span><span style=\"color:#9ECBFF\"> astro</span><span style=\"color:#9ECBFF\"> add</span><span style=\"color:#9ECBFF\"> tailwind</span></span></code></pre>\n<p>Why Tailwind?\nNo custom CSS boilerplate, just utility classes and I can focus on layout without writing repetitive CSS.</p>\n<h2 id=\"npm-packages-i-installed\">NPM Packages I Installed</h2>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">astro</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> Core</span><span style=\"color:#9ECBFF\"> framework.</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">@astrojs/tailwind</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> Easy</span><span style=\"color:#9ECBFF\"> utility-first</span><span style=\"color:#9ECBFF\"> styles.</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">@astrojs/mdx</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> Support</span><span style=\"color:#9ECBFF\"> for</span><span style=\"color:#9ECBFF\"> writing</span><span style=\"color:#9ECBFF\"> posts</span><span style=\"color:#9ECBFF\"> and</span><span style=\"color:#9ECBFF\"> components</span><span style=\"color:#9ECBFF\"> in</span><span style=\"color:#9ECBFF\"> MDX.</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">@astrojs/rss</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> RSS</span><span style=\"color:#9ECBFF\"> feed</span><span style=\"color:#9ECBFF\"> generation</span><span style=\"color:#9ECBFF\"> for</span><span style=\"color:#9ECBFF\"> my</span><span style=\"color:#9ECBFF\"> blog.</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">date-fns</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> Formatting</span><span style=\"color:#9ECBFF\"> dates</span><span style=\"color:#9ECBFF\"> in</span><span style=\"color:#9ECBFF\"> posts.</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">recharts</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> Interactive</span><span style=\"color:#9ECBFF\"> graphs.</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">astrojs/image</span><span style=\"color:#9ECBFF\"> ‚Äî</span><span style=\"color:#9ECBFF\"> Optimized</span><span style=\"color:#9ECBFF\"> image</span><span style=\"color:#9ECBFF\"> handling`</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">npm</span><span style=\"color:#9ECBFF\"> install @astrojs/mdx @astrojs/rss date-fns recharts</span></span></code></pre>\n<h2 id=\"Ô∏è-writing-content\">‚úçÔ∏è Writing Content</h2>\n<p>Astro makes content super easy. I just drop .md or .mdx files into src/content/posts.\nEach file looks like this:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">---</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">title:</span><span style=\"color:#9ECBFF\"> \"My First Blog Post\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">date:</span><span style=\"color:#9ECBFF\"> \"2025-06-02\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">excerpt:</span><span style=\"color:#9ECBFF\"> \"A quick look at my process.\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">coverImage:</span><span style=\"color:#9ECBFF\"> \"/images/my-post.jpg\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">---</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">Your</span><span style=\"color:#9ECBFF\"> markdown</span><span style=\"color:#9ECBFF\"> content</span><span style=\"color:#9ECBFF\"> goes</span><span style=\"color:#9ECBFF\"> here.</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"styling\">Styling</h2>\n<p>With Tailwind set up, customizing the UI was painless.\nHere‚Äôs my typical style process:</p>\n<ul>\n<li>Define layout in components (Header.astro, Footer.astro)</li>\n<li>Use Tailwind utility classes directly (class=‚Äútext-center text-xl mt-8‚Äù)</li>\n<li>Keep a globals.css for any global tweaks.</li>\n</ul>\n<h2 id=\"what-i-learned\">What I Learned</h2>\n<ul>\n<li>Astro‚Äôs island architecture really pays off ‚Äî my blog loads instantly and doesn‚Äôt ship any JS I don‚Äôt need.</li>\n<li>Setting up Tailwind saved me hours of writing custom CSS.</li>\n<li>NPM packages like date-fns and @astrojs/rss make small tasks like formatting dates and generating feeds super easy.</li>\n<li>Interactive components fit right into MDX without any friction.</li>\n</ul>\n<h3 id=\"thats-my-process---thanks-for-reading\">That‚Äôs my process. - Thanks for reading!</h3>",{headings:95,localImagePaths:118,remoteImagePaths:119,frontmatter:120,imagePaths:121},[96,99,102,105,108,111,114],{depth:60,slug:97,text:98},"getting-started","Getting Started",{depth:60,slug:100,text:101},"initial-setup","Initial Setup",{depth:60,slug:103,text:104},"npm-packages-i-installed","NPM Packages I Installed",{depth:60,slug:106,text:107},"Ô∏è-writing-content","‚úçÔ∏è Writing Content",{depth:60,slug:109,text:110},"styling","Styling",{depth:60,slug:112,text:113},"what-i-learned","What I Learned",{depth:115,slug:116,text:117},3,"thats-my-process---thanks-for-reading","That‚Äôs my process. - Thanks for reading!",[],[],{title:86,date:38,excerpt:87,coverImage:88},[],"astro-blog.md"];

export { _astro_dataLayerContent as default };
